# https://docs.astral.sh/uv/reference/settings/
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/

# PROJECT

[project]
name = "titanic-survival"
version = "0.1.0"
description = "Titanic Survival Project"
authors = [{ name = "Terence Ateya", email = "ateyatech.ai@gmail.com"}]
readme = "README.md"
requires-python = ">=3.11, <3.12"
dependencies = [
    "mlflow==2.17.0",
    "cffi==1.17.1",
    "cloudpickle==3.1.0",
    "matplotlib==3.9.2",
    "numpy==1.26.4",
    "plotly>=5.24.1",
    "pandas==2.2.3",
    "psutil==6.0.0",
    "pyarrow==14.0.1",
    "scikit-learn==1.5.2",
    "lightgbm==4.5.0",
    "scipy==1.14.1",
    "databricks-feature-engineering==0.6",
    "databricks-feature-lookup==1.2.0",
    "databricks-sdk==0.32.0",
    "pydantic==2.9.2",
    "pydantic-settings>=2.6.1",
    "xgboost==2.1.3",
    "setuptools==75.8.0",
    "wheel>=0.40.0",
    "joblib==1.4.2",
    "feature-engine==1.8.3"


]
license = { file = "LICENSE.txt" }
keywords = ["mlops", "python", "package"]

# SCRIPTS

[project.scripts]
titanic-survival = "titanic_survival.scripts:main"

# DEPENDENCIES

[dependency-groups]
checks = [
    "bandit>=1.8.0",
    "coverage>=7.6.8",
    "mypy>=1.13.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.1",
    "pytest>=8.3.3",
    "ruff>=0.8.1",
]
commits = ["commitizen>=4.0.0", "pre-commit>=4.0.1"]
dev = ["invoke>=2.2.0"]
docs = ["pdoc>=15.0.0"]
notebooks = ["ipykernel>=6.29.5", "nbformat>=5.10.4"]

[project.optional-dependencies]
dev = ["databricks-connect>=15.4.1, <16",
       "ipykernel>=6.29.5, <7",
       "pip>=24.2",
       "pre-commit>=4.1.0, <5"]


# TOOLS

[tool.setuptools.packages.find]
where =["src"]
include = ["titanic_survival*"]

[tool.uv]
default-groups = ["checks", "commits", "dev", "docs", "notebooks"]

[tool.bandit]
targets = ["src"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["__main__.py"]

[tool.mypy]
pretty = true
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--verbosity=2"
pythonpath = ["src"]

[tool.ruff]
fix = true
indent-width = 4
line-length = 120
target-version = "py312"
lint.select = [
    "F",  # pyflakes rules
    "E",  # pycodestyle error rules
    "W",  # pycodestyle warning rules
    "B",  # flake8-bugbear rules
    "I",  # isort rules
    ]
lint.ignore = [
    "E501",  # line-too-long
]

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D100", "D103"]

# SYSTEMS

[build-system]
requires = [
  "setuptools>=72.0"]
build-backend = "setuptools.build_meta"
